import type { ApiRequest } from '../lib/structures/api/ApiRequest';
import type { ApiResponse } from '../lib/structures/api/ApiResponse';
import { Middleware } from '../lib/structures/Middleware';
import type { Route } from '../lib/structures/Route';
export declare class PluginMiddleware extends Middleware {
    private readonly origin;
    private readonly methods;
    constructor(context: Middleware.Context);
    run(request: ApiRequest, response: ApiResponse, route: Route | null): void;
    /**
     * **RFC 7231 4.3.7.**
     * > This method allows a client to determine the options and/or requirements associated with a
     * > resource, or the capabilities of a server, without implying a resource action.
     *
     * This method ensures that the request is exited early in case required
     * The conditions in which an early exit is required are:
     * 1. If the request method is 'OPTIONS'. In this case the request is returned with status code 200
     * 2. If the requested route isn't matched with any existing route in the RouteStore.
     * In this case the request is returned with a status code 404.
     *
     * @param request The API Request coming in
     * @param response The API response that will go out
     * @param route The route being requested by the request
     */
    private ensurePotentialEarlyExit;
}
//# sourceMappingURL=headers.d.ts.map